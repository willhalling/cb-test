{"remainingRequest":"/Users/will/Documents/cb-test/node_modules/babel-loader/lib/index.js!/Users/will/Documents/cb-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will/Documents/cb-test/src/components/Form/Field/field.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/will/Documents/cb-test/src/components/Form/Field/field.vue","mtime":1529227650902},{"path":"/Users/will/Documents/cb-test/node_modules/cache-loader/dist/cjs.js","mtime":1529228477480},{"path":"/Users/will/Documents/cb-test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/will/Documents/cb-test/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'field',\n  props: ['name', 'value', 'type', 'placeholder', 'autofocus', 'maxLength', 'showCharacters', 'disabled', 'required'],\n  data: function data() {\n    return {\n      isActive: false\n    };\n  },\n  methods: {\n    onClick: function onClick() {\n      var input = this.$el.children[1];\n      input.focus();\n    },\n    onInput: function onInput(value) {\n      this.$emit('input', value);\n    }\n  }\n};",{"version":3,"sources":["field.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,eAAA;AACA,QAAA,OADA;AAGA,SAAA,CACA,MADA,EAEA,OAFA,EAGA,MAHA,EAIA,aAJA,EAKA,WALA,EAMA,WANA,EAOA,gBAPA,EAQA,UARA,EASA,UATA,CAHA;AAeA,QAAA;AAAA,WAAA;AACA,gBAAA;AADA,KAAA;AAAA,GAfA;AAmBA,WAAA;AACA,WADA,qBACA;AACA,UAAA,QAAA,KAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA;AACA,YAAA,KAAA;AACA,KAJA;AAMA,WANA,mBAMA,KANA,EAMA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA;AARA;AAnBA,CAAA","sourcesContent":["<template>\n  <div\n      class=\"field__group\"\n      :class=\"{ active: isActive }\"\n      @click=\"onClick\">\n    <div class=\"field__group__header\">\n      <label class=\"field__group__label\">\n        {{ name }}\n        <span class=\"required\" v-if=\"required\">*</span>\n      </label>\n    </div>\n    <textarea\n        v-if=\"type === 'textarea'\"\n        class=\"field__group__input\"\n        :placeholder=\"placeholder\"\n        :value=\"value\"\n        @input=\"onInput($event.target.value)\"\n        @focus=\"isActive = true\"\n        @blur=\"isActive = false\"\n        spellcheck=\"false\"\n        rows=\"5\"\n    />\n    <input\n        v-else\n        class=\"field__group__input\"\n        :placeholder=\"placeholder\"\n        :autofocus=\"autofocus\"\n        :value=\"value\"\n        @input=\"onInput($event.target.value)\"\n        @focus=\"isActive = true\"\n        @blur=\"isActive = false\"\n        type=\"text\"\n        spellcheck=\"false\">\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'field',\n\n    props: [\n      'name',\n      'value',\n      'type',\n      'placeholder',\n      'autofocus',\n      'maxLength',\n      'showCharacters',\n      'disabled',\n      'required'\n    ],\n\n    data: () => ({\n      isActive: false\n    }),\n\n    methods: {\n      onClick() {\n        const input = this.$el.children[1]\n        input.focus()\n      },\n\n      onInput(value) {\n        this.$emit('input', value)\n      }\n\n    }\n\n  }\n</script>\n\n<style lang=\"scss\">\n  @import '../../../scss/_variables.scss';\n\n  .field {\n    &__group {\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n      margin-bottom: 10px;\n      background-color: #FFF;\n      border: 1px solid #000;\n      padding: {\n        bottom: 10px;\n        right: 10px;\n        left: 10px;\n        top: 10px;\n      }\n      transition: border-color $transition;\n\n      &.active {\n        border-color: palette(orange);\n      }\n\n      &__header {\n        display: flex;\n        margin-bottom: $padding / 4;\n      }\n\n      &__label {\n        color: #000;\n        font: {\n          size: .8rem;\n          weight: 500;\n        }\n        margin-bottom: 5px;\n        text-transform: uppercase;\n        transition: color $transition;\n      }\n\n      &__limiter {\n        margin-bottom: $padding / 4;\n        display: block;\n        font-size: 0.75em;\n        text-align: right;\n        margin-left: auto;\n        color: #999;\n      }\n\n      &__input {\n        border: 0;\n        padding: 0;\n        color: #000;\n        background-color: transparent;\n        font: {\n          size: 1rem;\n        }\n        outline: 0;\n        font-family: $serifFont;\n        font-weight: 300;\n\n        &::placeholder {\n          color: grey;\n          transition: color $transition;\n        }\n      }\n    }\n  }\n\n</style>\n"],"sourceRoot":"src/components/Form/Field"}]}