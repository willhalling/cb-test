{"remainingRequest":"/Users/will/Documents/cb-test/node_modules/babel-loader/lib/index.js!/Users/will/Documents/cb-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will/Documents/cb-test/src/components/ButtonCta/button-cta.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/will/Documents/cb-test/src/components/ButtonCta/button-cta.vue","mtime":1529225411867},{"path":"/Users/will/Documents/cb-test/node_modules/cache-loader/dist/cjs.js","mtime":1529228477480},{"path":"/Users/will/Documents/cb-test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/will/Documents/cb-test/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'button',\n  props: {\n    text: {\n      type: String\n    },\n    type: {\n      type: String,\n      default: 'button'\n    },\n    full: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  computed: {\n    cssClasses: function cssClasses() {\n      return \"\".concat(this.type).concat(this.full ? ' button--full' : '');\n    }\n  },\n  methods: {\n    onClick: function onClick(event) {\n      this.$emit('click', event);\n    }\n  }\n};",{"version":3,"sources":["button-cta.vue"],"names":[],"mappings":";;;;;;;;;AAUA,eAAA;AACA,QAAA,QADA;AAGA,SAAA;AACA,UAAA;AACA,YAAA;AADA,KADA;AAIA,UAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KAJA;AAQA,UAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA;AARA,GAHA;AAiBA,QAAA;AAAA,WAAA,EAAA;AAAA,GAjBA;AAmBA,YAAA;AACA,cADA,wBACA;AACA,uBAAA,KAAA,IAAA,SAAA,KAAA,IAAA,GAAA,eAAA,GAAA,EAAA;AACA;AAHA,GAnBA;AAyBA,WAAA;AACA,WADA,mBACA,KADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA;AAHA;AAzBA,CAAA","sourcesContent":["<template>\n  <button\n      :class=\"cssClasses\"\n      :type=\"type\"\n      @click=\"onClick\">\n    <slot/>\n  </button>\n</template>\n\n<script>\n  export default {\n    name: 'button',\n\n    props: {\n      text: {\n        type: String\n      },\n      type: {\n        type: String,\n        default: 'button'\n      },\n      full: {\n        type: Boolean,\n        default: false\n      }\n    },\n\n    data: () => ({}),\n\n    computed: {\n      cssClasses() {\n        return `${this.type}${this.full ? ' button--full' : ''}`\n      }\n    },\n\n    methods: {\n      onClick(event) {\n        this.$emit('click', event)\n      }\n    }\n\n  }\n</script>\n\n<style lang=\"scss\">\n  @import '../../scss/_variables.scss';\n\n  .button {\n    text-transform: uppercase;\n    display: inline-flex;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid black;\n    padding: 0.75rem;\n    letter-spacing: 0.094em;\n    font-size: 1em;\n    text-decoration: none;\n    color: #FFF;\n    background-color: #000;\n    cursor: pointer;\n    transition: all $transition;\n    border-radius: 0;\n    box-sizing: border-box;\n    text-align: center;\n    font-family: $serifFont;\n    &--full {\n      width: 100%;\n    }\n  }\n</style>\n"],"sourceRoot":"src/components/ButtonCta"}]}