{"remainingRequest":"/Users/will/Documents/cb-test/node_modules/babel-loader/lib/index.js!/Users/will/Documents/cb-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will/Documents/cb-test/src/components/Form/form.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/will/Documents/cb-test/src/components/Form/form.vue","mtime":1529225114669},{"path":"/Users/will/Documents/cb-test/node_modules/cache-loader/dist/cjs.js","mtime":1529228477480},{"path":"/Users/will/Documents/cb-test/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/will/Documents/cb-test/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Field from '@/components/Form/Field/field.vue';\nimport ButtonCta from '@/components/ButtonCta/button-cta.vue';\nimport { formMixin } from '@/mixins/formMixin';\nexport default {\n  name: 'Summary',\n  mixins: [formMixin],\n  components: {\n    Field: Field,\n    ButtonCta: ButtonCta\n  },\n  data: function data() {\n    return {\n      messages: [],\n      form: {\n        first_name: '',\n        surname: '',\n        email_address: '',\n        customer_query: ''\n      },\n      errors: 0\n    };\n  },\n  methods: {\n    validateForm: function validateForm() {\n      this.resetForm();\n\n      if (this.form.first_name === '') {\n        this.addErrorMessage('First Name');\n        this.errors++;\n      }\n\n      if (this.form.surname === '') {\n        this.addErrorMessage('Surname');\n        this.errors++;\n      }\n\n      if (this.form.email_address === '') {\n        this.addErrorMessage('Email Address');\n        this.errors++;\n      }\n\n      if (!this.validateEmail(this.form.email_address)) {\n        this.messages.push('Please add a valid Email Address.');\n        this.errors++;\n      }\n\n      if (this.errors) {\n        return;\n      }\n\n      this.submitForm(this.form);\n    },\n    resetForm: function resetForm() {\n      this.messages = [];\n      this.errors = 0;\n    },\n    addErrorMessage: function addErrorMessage(name) {\n      return this.messages.push(\"You need to add a \".concat(name, \".\"));\n    },\n    // regular expression thanks to: https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\n    validateEmail: function validateEmail(email) {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n    }\n  }\n};",{"version":3,"sources":["form.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,OAAA,KAAA,MAAA,mCAAA;AACA,OAAA,SAAA,MAAA,uCAAA;AACA,SAAA,SAAA,QAAA,oBAAA;AAEA,eAAA;AACA,QAAA,SADA;AAEA,UAAA,CAAA,SAAA,CAFA;AAGA,cAAA;AACA,gBADA;AAEA;AAFA,GAHA;AAOA,QAAA;AAAA,WAAA;AACA,gBAAA,EADA;AAEA,YAAA;AACA,oBAAA,EADA;AAEA,iBAAA,EAFA;AAGA,uBAAA,EAHA;AAIA,wBAAA;AAJA,OAFA;AAQA,cAAA;AARA,KAAA;AAAA,GAPA;AAiBA,WAAA;AACA,gBADA,0BACA;AAEA,WAAA,SAAA;;AAEA,UAAA,KAAA,IAAA,CAAA,UAAA,KAAA,EAAA,EAAA;AACA,aAAA,eAAA,CAAA,YAAA;AACA,aAAA,MAAA;AACA;;AACA,UAAA,KAAA,IAAA,CAAA,OAAA,KAAA,EAAA,EAAA;AACA,aAAA,eAAA,CAAA,SAAA;AACA,aAAA,MAAA;AACA;;AACA,UAAA,KAAA,IAAA,CAAA,aAAA,KAAA,EAAA,EAAA;AACA,aAAA,eAAA,CAAA,eAAA;AACA,aAAA,MAAA;AACA;;AACA,UAAA,CAAA,KAAA,aAAA,CAAA,KAAA,IAAA,CAAA,aAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,IAAA,CAAA,mCAAA;AACA,aAAA,MAAA;AACA;;AAEA,UAAA,KAAA,MAAA,EAAA;AACA;AACA;;AAEA,WAAA,UAAA,CAAA,KAAA,IAAA;AACA,KA3BA;AA4BA,aA5BA,uBA4BA;AACA,WAAA,QAAA,GAAA,EAAA;AACA,WAAA,MAAA,GAAA,CAAA;AACA,KA/BA;AAgCA,mBAhCA,2BAgCA,IAhCA,EAgCA;AACA,aAAA,KAAA,QAAA,CAAA,IAAA,6BAAA,IAAA,OAAA;AACA,KAlCA;AAmCA;AACA,iBApCA,yBAoCA,KApCA,EAoCA;AACA,UAAA,KAAA,yJAAA;AACA,aAAA,GAAA,IAAA,CAAA,OAAA,KAAA,EAAA,WAAA,EAAA,CAAA;AACA;AAvCA;AAjBA,CAAA","sourcesContent":["<template>\n  <div class=\"Form\">\n    <p>Fields marked <span class=\"required\">*</span> are required.</p>\n    <p class=\"Form__error\" v-if=\"errors\">Oh no, you have {{ errors }} errors.</p>\n    <p class=\"Form__message\" v-for=\"message in messages\">{{ message }}</p>\n    <field name=\"First name\" v-model=\"form.first_name\" :required=\"true\"></field>\n    <field name=\"Surname\" v-model=\"form.surname\" :required=\"true\"></field>\n    <field name=\"E-mail address\" v-model=\"form.email_address\" :required=\"true\"></field>\n    <field name=\"Customer query\" v-model=\"form.customer_query\" type=\"textarea\"></field>\n    <button-cta full @click=\"validateForm\">Add</button-cta>\n  </div>\n</template>\n\n<script>\n  import Field from '@/components/Form/Field/field.vue'\n  import ButtonCta from '@/components/ButtonCta/button-cta.vue'\n  import {formMixin} from '@/mixins/formMixin'\n\n  export default {\n    name: 'Summary',\n    mixins: [formMixin],\n    components: {\n      Field,\n      ButtonCta\n    },\n    data: () => ({\n      messages: [],\n      form: {\n        first_name: '',\n        surname: '',\n        email_address: '',\n        customer_query: ''\n      },\n      errors: 0\n    }),\n    methods: {\n      validateForm() {\n\n        this.resetForm()\n\n        if (this.form.first_name === '') {\n          this.addErrorMessage('First Name')\n          this.errors++\n        }\n        if (this.form.surname === '') {\n          this.addErrorMessage('Surname')\n          this.errors++\n        }\n        if (this.form.email_address === '') {\n          this.addErrorMessage('Email Address')\n          this.errors++\n        }\n        if (!this.validateEmail(this.form.email_address)) {\n          this.messages.push('Please add a valid Email Address.')\n          this.errors++\n        }\n\n        if (this.errors) {\n          return\n        }\n\n        this.submitForm(this.form)\n      },\n      resetForm() {\n        this.messages = []\n        this.errors = 0\n      },\n      addErrorMessage(name) {\n        return this.messages.push(`You need to add a ${name}.`)\n      },\n      // regular expression thanks to: https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\n      validateEmail(email) {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        return re.test(String(email).toLowerCase())\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n\n  .Form {\n    &__error {\n      color: red\n    }\n    &__message {\n      padding: 1em;\n      color: #31708f;\n      background-color: #d9edf7;\n      border: 1px solid #bce8f1;\n    }\n  }\n\n</style>\n"],"sourceRoot":"src/components/Form"}]}